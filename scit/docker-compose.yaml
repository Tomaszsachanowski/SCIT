version: "3"

services:
  app_1:
    build:
        context: ./app
        dockerfile: Dockerfile_app
    depends_on:
      - db
      - redis
    expose:
      - 5000
    # ports:
    #   - "5001:5000"
    container_name: shop-app-1
    environment: 
      TITLE_APP: VM_1
      SID: 'd5ac9317-b772-428c-b192-b61c94b02226'
    networks:
      appnet:
          ipv4_address: 172.24.2.1

  app_2:
    build:
        context: ./app
        dockerfile: Dockerfile_app
    depends_on:
      - db
      - redis
    expose:
      - 5000
    container_name: shop-app-2
    environment: 
      TITLE_APP: VM_2
      SID: 'd5ac9317-b772-428c-b192-b61c94b02226'
    networks:
        appnet:
            ipv4_address: 172.24.2.2

  app_3:
    build:
        context: ./app
        dockerfile: Dockerfile_app
    depends_on:
      - db
      - redis
    expose:
      - 5000
    container_name: shop-app-3
    environment: 
      TITLE_APP: VM_3
      SID: 'd5ac9317-b772-428c-b192-b61c94b02226'
    networks:
        appnet:
            ipv4_address: 172.24.2.3

  db:
    image: mysql:8.0.28
    restart: always
    ports:
      - "30000:3306"
    environment:
      MYSQL_ROOT_PASSWORD: root
    volumes:
      - ./database:/docker-entrypoint-initdb.d/:ro
    container_name: mysql-8_0
    networks:
        appnet:
            ipv4_address: 172.24.2.4

  redis:
    image: redis
    restart: always
    ports:
      - "6379:6379"
    container_name: redis-session
    networks:
        appnet:
            ipv4_address: 172.24.2.5

  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile_nginx
    container_name: nginx
    restart: always
    depends_on:
      - app_1
      - app_2
      - app_3
    ports:
      - "4000:4000"
    networks:
        appnet:
            ipv4_address: 172.24.2.6

networks:
    appnet:
        driver: bridge
        ipam:
            driver: default
            config:
                - subnet: "172.24.2.0/16"
